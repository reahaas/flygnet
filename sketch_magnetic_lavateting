// ---------------------------------------------------------------- //
// Arduino Ultrasoninc Sensor HC-SR04
// Re-writed by Arbi Abdul Jabbaar
// Using Arduino IDE 1.8.7
// Using HC-SR04 Module
// Tested on 17 September 2019
// ---------------------------------------------------------------- //

#define echoPin 2 // attach pin D2 Arduino to pin Echo of HC-SR04
#define trigPin 3 //attach pin D3 Arduino to pin Trig of HC-SR04
#define redLight 4
#define blueLight 11
#define selenoidSig 9


// defines variables
long duration; // variable for the duration of sound wave travel
int distance; // variable for the distance measurement
bool toggle = false;
int selenoidValue;

void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an OUTPUT
  pinMode(echoPin, INPUT); // Sets the echoPin as an INPUT
  pinMode(redLight, OUTPUT);
  pinMode(blueLight, OUTPUT);
  pinMode(selenoidSig, OUTPUT);
  Serial.begin(9600); // // Serial Communication is starting with 9600 of baudrate speed
  Serial.println("Ultrasonic Sensor HC-SR04 Test"); // print some text in Serial Monitor
  Serial.println("with Arduino UNO R3");
}


void turnMagnetOn(int distance)
{
    Serial.println("Too close!! start Magnet");
    digitalWrite(blueLight, HIGH);
    digitalWrite(redLight, LOW);
    digitalWrite(selenoidSig, HIGH);
    
    // selenoidValue = 255; //255 / (distance * distance);
    // analogWrite(selenoidSig, selenoidValue);
}

void turnMagnetOff()
{
    Serial.println("Far away!! stop Magnet");
    digitalWrite(blueLight, LOW);
    digitalWrite(redLight, HIGH);
    digitalWrite(selenoidSig, LOW);
    }

void loop() {
  // Clears the trigPin condition
  digitalWrite(trigPin, LOW);
  // delayMicroseconds(2);
  // Sets the trigPin HIGH (ACTIVE) for 10 microseconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2; // Speed of sound wave divided by 2 (go and back)
  // Displays the distance on the Serial Monitor
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");
  if (distance < 20){  // toggle){
    turnMagnetOn(distance);
  }
  else
  {
    turnMagnetOff();
  }
}
